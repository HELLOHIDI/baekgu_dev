// Generated by view binder compiler. Do not edit!
package com.kookmin.mobile_programming.baekgu.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.CalendarView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kookmin.mobile_programming.baekgu.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentCalendarBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final LinearLayoutCompat fgCalendarLayoutInfo;

  @NonNull
  public final CalendarView fgCalendarMain;

  @NonNull
  public final Toolbar fgCalendarToolbar;

  @NonNull
  public final AppCompatTextView fgCalendarTvCurrentProtein;

  @NonNull
  public final AppCompatTextView fgCalendarTvCurrentProteinTitle;

  @NonNull
  public final AppCompatTextView fgCalendarTvDate;

  @NonNull
  public final AppCompatTextView fgCalendarTvMore;

  @NonNull
  public final AppCompatTextView fgCalendarTvTargetProtein;

  @NonNull
  public final AppCompatTextView fgCalendarTvTargetProteinTitle;

  @NonNull
  public final AppCompatTextView fgCalendarTvTitle;

  private FragmentCalendarBinding(@NonNull ConstraintLayout rootView,
      @NonNull LinearLayoutCompat fgCalendarLayoutInfo, @NonNull CalendarView fgCalendarMain,
      @NonNull Toolbar fgCalendarToolbar, @NonNull AppCompatTextView fgCalendarTvCurrentProtein,
      @NonNull AppCompatTextView fgCalendarTvCurrentProteinTitle,
      @NonNull AppCompatTextView fgCalendarTvDate, @NonNull AppCompatTextView fgCalendarTvMore,
      @NonNull AppCompatTextView fgCalendarTvTargetProtein,
      @NonNull AppCompatTextView fgCalendarTvTargetProteinTitle,
      @NonNull AppCompatTextView fgCalendarTvTitle) {
    this.rootView = rootView;
    this.fgCalendarLayoutInfo = fgCalendarLayoutInfo;
    this.fgCalendarMain = fgCalendarMain;
    this.fgCalendarToolbar = fgCalendarToolbar;
    this.fgCalendarTvCurrentProtein = fgCalendarTvCurrentProtein;
    this.fgCalendarTvCurrentProteinTitle = fgCalendarTvCurrentProteinTitle;
    this.fgCalendarTvDate = fgCalendarTvDate;
    this.fgCalendarTvMore = fgCalendarTvMore;
    this.fgCalendarTvTargetProtein = fgCalendarTvTargetProtein;
    this.fgCalendarTvTargetProteinTitle = fgCalendarTvTargetProteinTitle;
    this.fgCalendarTvTitle = fgCalendarTvTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentCalendarBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_calendar, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentCalendarBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fg_calendar_layout_info;
      LinearLayoutCompat fgCalendarLayoutInfo = ViewBindings.findChildViewById(rootView, id);
      if (fgCalendarLayoutInfo == null) {
        break missingId;
      }

      id = R.id.fg_calendar_main;
      CalendarView fgCalendarMain = ViewBindings.findChildViewById(rootView, id);
      if (fgCalendarMain == null) {
        break missingId;
      }

      id = R.id.fg_calendar_toolbar;
      Toolbar fgCalendarToolbar = ViewBindings.findChildViewById(rootView, id);
      if (fgCalendarToolbar == null) {
        break missingId;
      }

      id = R.id.fg_calendar_tv_current_protein;
      AppCompatTextView fgCalendarTvCurrentProtein = ViewBindings.findChildViewById(rootView, id);
      if (fgCalendarTvCurrentProtein == null) {
        break missingId;
      }

      id = R.id.fg_calendar_tv_current_protein_title;
      AppCompatTextView fgCalendarTvCurrentProteinTitle = ViewBindings.findChildViewById(rootView, id);
      if (fgCalendarTvCurrentProteinTitle == null) {
        break missingId;
      }

      id = R.id.fg_calendar_tv_date;
      AppCompatTextView fgCalendarTvDate = ViewBindings.findChildViewById(rootView, id);
      if (fgCalendarTvDate == null) {
        break missingId;
      }

      id = R.id.fg_calendar_tv_more;
      AppCompatTextView fgCalendarTvMore = ViewBindings.findChildViewById(rootView, id);
      if (fgCalendarTvMore == null) {
        break missingId;
      }

      id = R.id.fg_calendar_tv_target_protein;
      AppCompatTextView fgCalendarTvTargetProtein = ViewBindings.findChildViewById(rootView, id);
      if (fgCalendarTvTargetProtein == null) {
        break missingId;
      }

      id = R.id.fg_calendar_tv_target_protein_title;
      AppCompatTextView fgCalendarTvTargetProteinTitle = ViewBindings.findChildViewById(rootView, id);
      if (fgCalendarTvTargetProteinTitle == null) {
        break missingId;
      }

      id = R.id.fg_calendar_tv_title;
      AppCompatTextView fgCalendarTvTitle = ViewBindings.findChildViewById(rootView, id);
      if (fgCalendarTvTitle == null) {
        break missingId;
      }

      return new FragmentCalendarBinding((ConstraintLayout) rootView, fgCalendarLayoutInfo,
          fgCalendarMain, fgCalendarToolbar, fgCalendarTvCurrentProtein,
          fgCalendarTvCurrentProteinTitle, fgCalendarTvDate, fgCalendarTvMore,
          fgCalendarTvTargetProtein, fgCalendarTvTargetProteinTitle, fgCalendarTvTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
