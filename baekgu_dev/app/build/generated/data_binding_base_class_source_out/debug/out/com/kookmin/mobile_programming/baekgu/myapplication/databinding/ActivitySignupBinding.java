// Generated by view binder compiler. Do not edit!
package com.kookmin.mobile_programming.baekgu.myapplication.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.appcompat.widget.AppCompatEditText;
import androidx.appcompat.widget.AppCompatImageView;
import androidx.appcompat.widget.AppCompatTextView;
import androidx.appcompat.widget.LinearLayoutCompat;
import androidx.appcompat.widget.Toolbar;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.kookmin.mobile_programming.baekgu.myapplication.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ActivitySignupBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final AppCompatEditText signupEditBirthday;

  @NonNull
  public final AppCompatEditText signupEditId;

  @NonNull
  public final AppCompatEditText signupEditName;

  @NonNull
  public final AppCompatEditText signupEditNumber;

  @NonNull
  public final AppCompatEditText signupEditPw;

  @NonNull
  public final AppCompatEditText signupEditTown;

  @NonNull
  public final AppCompatImageView signupImgBack;

  @NonNull
  public final LinearLayoutCompat signupLayoutBirthday;

  @NonNull
  public final LinearLayoutCompat signupLayoutId;

  @NonNull
  public final LinearLayoutCompat signupLayoutName;

  @NonNull
  public final LinearLayoutCompat signupLayoutNumber;

  @NonNull
  public final LinearLayoutCompat signupLayoutPw;

  @NonNull
  public final LinearLayoutCompat signupLayoutTown;

  @NonNull
  public final Toolbar signupToolbar;

  @NonNull
  public final AppCompatTextView signupTvBirthdayTitle;

  @NonNull
  public final AppCompatButton signupTvFinish;

  @NonNull
  public final AppCompatTextView signupTvIdTitle;

  @NonNull
  public final AppCompatTextView signupTvNameTitle;

  @NonNull
  public final AppCompatTextView signupTvNumberTitle;

  @NonNull
  public final AppCompatTextView signupTvPwTitle;

  @NonNull
  public final AppCompatTextView signupTvTitle;

  @NonNull
  public final AppCompatTextView signupTvTownTitle;

  private ActivitySignupBinding(@NonNull ConstraintLayout rootView,
      @NonNull AppCompatEditText signupEditBirthday, @NonNull AppCompatEditText signupEditId,
      @NonNull AppCompatEditText signupEditName, @NonNull AppCompatEditText signupEditNumber,
      @NonNull AppCompatEditText signupEditPw, @NonNull AppCompatEditText signupEditTown,
      @NonNull AppCompatImageView signupImgBack, @NonNull LinearLayoutCompat signupLayoutBirthday,
      @NonNull LinearLayoutCompat signupLayoutId, @NonNull LinearLayoutCompat signupLayoutName,
      @NonNull LinearLayoutCompat signupLayoutNumber, @NonNull LinearLayoutCompat signupLayoutPw,
      @NonNull LinearLayoutCompat signupLayoutTown, @NonNull Toolbar signupToolbar,
      @NonNull AppCompatTextView signupTvBirthdayTitle, @NonNull AppCompatButton signupTvFinish,
      @NonNull AppCompatTextView signupTvIdTitle, @NonNull AppCompatTextView signupTvNameTitle,
      @NonNull AppCompatTextView signupTvNumberTitle, @NonNull AppCompatTextView signupTvPwTitle,
      @NonNull AppCompatTextView signupTvTitle, @NonNull AppCompatTextView signupTvTownTitle) {
    this.rootView = rootView;
    this.signupEditBirthday = signupEditBirthday;
    this.signupEditId = signupEditId;
    this.signupEditName = signupEditName;
    this.signupEditNumber = signupEditNumber;
    this.signupEditPw = signupEditPw;
    this.signupEditTown = signupEditTown;
    this.signupImgBack = signupImgBack;
    this.signupLayoutBirthday = signupLayoutBirthday;
    this.signupLayoutId = signupLayoutId;
    this.signupLayoutName = signupLayoutName;
    this.signupLayoutNumber = signupLayoutNumber;
    this.signupLayoutPw = signupLayoutPw;
    this.signupLayoutTown = signupLayoutTown;
    this.signupToolbar = signupToolbar;
    this.signupTvBirthdayTitle = signupTvBirthdayTitle;
    this.signupTvFinish = signupTvFinish;
    this.signupTvIdTitle = signupTvIdTitle;
    this.signupTvNameTitle = signupTvNameTitle;
    this.signupTvNumberTitle = signupTvNumberTitle;
    this.signupTvPwTitle = signupTvPwTitle;
    this.signupTvTitle = signupTvTitle;
    this.signupTvTownTitle = signupTvTownTitle;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivitySignupBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_signup, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivitySignupBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.signup_edit_birthday;
      AppCompatEditText signupEditBirthday = ViewBindings.findChildViewById(rootView, id);
      if (signupEditBirthday == null) {
        break missingId;
      }

      id = R.id.signup_edit_id;
      AppCompatEditText signupEditId = ViewBindings.findChildViewById(rootView, id);
      if (signupEditId == null) {
        break missingId;
      }

      id = R.id.signup_edit_name;
      AppCompatEditText signupEditName = ViewBindings.findChildViewById(rootView, id);
      if (signupEditName == null) {
        break missingId;
      }

      id = R.id.signup_edit_number;
      AppCompatEditText signupEditNumber = ViewBindings.findChildViewById(rootView, id);
      if (signupEditNumber == null) {
        break missingId;
      }

      id = R.id.signup_edit_pw;
      AppCompatEditText signupEditPw = ViewBindings.findChildViewById(rootView, id);
      if (signupEditPw == null) {
        break missingId;
      }

      id = R.id.signup_edit_town;
      AppCompatEditText signupEditTown = ViewBindings.findChildViewById(rootView, id);
      if (signupEditTown == null) {
        break missingId;
      }

      id = R.id.signup_img_back;
      AppCompatImageView signupImgBack = ViewBindings.findChildViewById(rootView, id);
      if (signupImgBack == null) {
        break missingId;
      }

      id = R.id.signup_layout_birthday;
      LinearLayoutCompat signupLayoutBirthday = ViewBindings.findChildViewById(rootView, id);
      if (signupLayoutBirthday == null) {
        break missingId;
      }

      id = R.id.signup_layout_id;
      LinearLayoutCompat signupLayoutId = ViewBindings.findChildViewById(rootView, id);
      if (signupLayoutId == null) {
        break missingId;
      }

      id = R.id.signup_layout_name;
      LinearLayoutCompat signupLayoutName = ViewBindings.findChildViewById(rootView, id);
      if (signupLayoutName == null) {
        break missingId;
      }

      id = R.id.signup_layout_number;
      LinearLayoutCompat signupLayoutNumber = ViewBindings.findChildViewById(rootView, id);
      if (signupLayoutNumber == null) {
        break missingId;
      }

      id = R.id.signup_layout_pw;
      LinearLayoutCompat signupLayoutPw = ViewBindings.findChildViewById(rootView, id);
      if (signupLayoutPw == null) {
        break missingId;
      }

      id = R.id.signup_layout_town;
      LinearLayoutCompat signupLayoutTown = ViewBindings.findChildViewById(rootView, id);
      if (signupLayoutTown == null) {
        break missingId;
      }

      id = R.id.signup_toolbar;
      Toolbar signupToolbar = ViewBindings.findChildViewById(rootView, id);
      if (signupToolbar == null) {
        break missingId;
      }

      id = R.id.signup_tv_birthday_title;
      AppCompatTextView signupTvBirthdayTitle = ViewBindings.findChildViewById(rootView, id);
      if (signupTvBirthdayTitle == null) {
        break missingId;
      }

      id = R.id.signup_tv_finish;
      AppCompatButton signupTvFinish = ViewBindings.findChildViewById(rootView, id);
      if (signupTvFinish == null) {
        break missingId;
      }

      id = R.id.signup_tv_id_title;
      AppCompatTextView signupTvIdTitle = ViewBindings.findChildViewById(rootView, id);
      if (signupTvIdTitle == null) {
        break missingId;
      }

      id = R.id.signup_tv_name_title;
      AppCompatTextView signupTvNameTitle = ViewBindings.findChildViewById(rootView, id);
      if (signupTvNameTitle == null) {
        break missingId;
      }

      id = R.id.signup_tv_number_title;
      AppCompatTextView signupTvNumberTitle = ViewBindings.findChildViewById(rootView, id);
      if (signupTvNumberTitle == null) {
        break missingId;
      }

      id = R.id.signup_tv_pw_title;
      AppCompatTextView signupTvPwTitle = ViewBindings.findChildViewById(rootView, id);
      if (signupTvPwTitle == null) {
        break missingId;
      }

      id = R.id.signup_tv_title;
      AppCompatTextView signupTvTitle = ViewBindings.findChildViewById(rootView, id);
      if (signupTvTitle == null) {
        break missingId;
      }

      id = R.id.signup_tv_town_title;
      AppCompatTextView signupTvTownTitle = ViewBindings.findChildViewById(rootView, id);
      if (signupTvTownTitle == null) {
        break missingId;
      }

      return new ActivitySignupBinding((ConstraintLayout) rootView, signupEditBirthday,
          signupEditId, signupEditName, signupEditNumber, signupEditPw, signupEditTown,
          signupImgBack, signupLayoutBirthday, signupLayoutId, signupLayoutName, signupLayoutNumber,
          signupLayoutPw, signupLayoutTown, signupToolbar, signupTvBirthdayTitle, signupTvFinish,
          signupTvIdTitle, signupTvNameTitle, signupTvNumberTitle, signupTvPwTitle, signupTvTitle,
          signupTvTownTitle);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
